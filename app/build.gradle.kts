import com.google.protobuf.gradle.*
/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */
val kotlinVersion = "1.9.10" 
val grpcVersion = "1.58.0"
val grpcKotlinVersion = "1.4.0"
val protobufVersion = "3.24.3"
val coroutinesVersion = "1.7.3"
val junitJupiterVersion = "5.9.2"

plugins {
    id("org.jetbrains.kotlin.jvm") version "1.9.10"
    id("com.google.protobuf") version "0.9.4"
    // id("org.jlleitschuh.gradle.ktlint") version "11.6.0"
    id("com.github.johnrengelman.shadow") version "8.1.1"
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    google()
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")
    // Use the JUnit 5 integration.
    testImplementation("org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")
    // This dependency is used by the application.
    implementation("com.google.guava:guava:31.1-jre")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")

    // gRPC dependencies
    implementation("io.grpc:grpc-kotlin-stub:$grpcKotlinVersion")
    implementation("io.grpc:grpc-protobuf:$grpcVersion")
    implementation("io.grpc:grpc-netty-shaded:$grpcVersion")
    implementation("com.google.protobuf:protobuf-kotlin:3.24.3")
    implementation("io.grpc:grpc-netty-shaded:1.58.0")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

kotlin.sourceSets.all {
    languageSettings.optIn("kotlin.RequiresOptIn")
    languageSettings.optIn("org.jetbrains.kotlin.gradle.InternalKotlinGradlePluginApi")
}

application {
    // Define the main class for the application.
    // mainClass.set("grpc.kotlin.AppKt")
    mainClass.set("io.grpc.examples.hello.HelloServer")
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobufVersion"
    }
    plugins {
        id("grpc") {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }
        id("grpckt") {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpcKotlinVersion:jdk8@jar"
        }
        // id("kotlin") {
        //     artifact = "com.google.protobuf:protobuf-kotlin:3.24.3"
        // }
    }
    generateProtoTasks {
        all().forEach {
            it.plugins {
                id("grpc")
                id("grpckt")
                // id("kotlin")
            }
            it.builtins {
                id("kotlin")
            }
        }
    }

}

sourceSets {
    main {
        kotlin {
            srcDirs("build/generated/source/proto/main/grpc", "build/generated/source/proto/main/kotlin")
        }
        java {
            srcDirs("build/generated/source/proto/main/java")
        }
    }
}

tasks.shadowJar {
    archiveBaseName.set("hello-server")
    archiveVersion.set("0.1.0")
    archiveClassifier.set("")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}